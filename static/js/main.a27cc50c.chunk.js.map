{"version":3,"sources":["components/Navigation.tsx","components/Footer.tsx","assets/images/Game.png","pages/Home.tsx","components/wallet/connectors.tsx","pages/Games.tsx","pages/Spacebots.tsx","pages/Profile.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["PrimarySearchAppBar","React","anchorEl","setAnchorEl","mobileMoreAnchorEl","setMobileMoreAnchorEl","isMenuOpen","Boolean","isMobileMenuOpen","handleMobileMenuClose","handleMenuClose","renderMenu","Menu","anchorOrigin","vertical","horizontal","id","keepMounted","transformOrigin","open","onClose","MenuItem","onClick","mobileMenuId","renderMobileMenu","style","color","isActive","to","IconButton","target","href","size","aria-label","Badge","badgeContent","Box","sx","flexGrow","AppBar","position","Toolbar","Typography","variant","noWrap","component","display","xs","sm","className","md","aria-controls","aria-haspopup","event","currentTarget","Album","Copyright","align","Link","Date","getFullYear","bgcolor","p","gutterBottom","Home","CssBaseline","pt","pb","Container","maxWidth","paragraph","Stack","direction","spacing","justifyContent","py","Grid","container","item","Card","height","flexDirection","CardMedia","maxHeight","minHeight","padding","image","alt","CardContent","spacebots_img","injected","InjectedConnector","supportedChainIds","iotabotsContractAddress","gameContractAddress","tokenContractAddress","Games","useWeb3React","active","account","library","activate","deactivate","chainId","setOpen","handleOpen","handleClose","useState","message","winner","setWinner","loading","setLoading","playerTokens","setPlayerTokens","tokenSupply","setTokenSupply","useEffect","loadBots","loadGame","bots","setBots","callback","err","console","log","a","x","provider","ethers","providers","Web3Provider","currentProvider","contract","Contract","IOTABOTS_ABI","walletOfOwner","data","Promise","all","map","i","token_index","toNumber","tokenURI","metadata_url","axios","get","metadata","items","GAME","abi","token","TOKEN","balanceOf","playerTokenBanlance","utils","formatEther","totalSupply","botsTokenBanlance","start_game","bet","signer","getSigner","createSingleGame","edition","value","parseEther","once","_player_bet","_bot_bet","length","ex","content","textAlign","substring","Button","width","marginBottom","bot","index","name","disabled","CircularProgress","Modal","aria-labelledby","aria-describedby","top","left","transform","border","boxShadow","mt","marginTop","spacebotsContractAddress","Spacebots","SPACEBOTS_ABI","obj","tokenId","url","rel","Profile","connector","dna","date","toLocaleDateString","getLibrary","Web3","App","theme","createTheme","typography","fontFamily","palette","primary","light","main","dark","contrastText","secondary","ThemeProvider","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a27cc50c.chunk.js","sourcesContent":["import * as React from 'react';\nimport AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport Toolbar from '@mui/material/Toolbar';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\nimport Badge from '@mui/material/Badge';\nimport MenuItem from '@mui/material/MenuItem';\nimport Menu from '@mui/material/Menu';\nimport Twitter from '@mui/icons-material/Twitter';\nimport MoreIcon from '@mui/icons-material/MoreVert';\nimport { NavLink } from \"react-router-dom\";\n\nexport default function PrimarySearchAppBar() {\n    const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n    const [mobileMoreAnchorEl, setMobileMoreAnchorEl] =\n        React.useState<null | HTMLElement>(null);\n\n    const isMenuOpen = Boolean(anchorEl);\n    const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n\n    // const handleProfileMenuOpen = (event: React.MouseEvent<HTMLElement>) => {\n    //     setAnchorEl(event.currentTarget);\n    // };\n\n    const handleMobileMenuClose = () => {\n        setMobileMoreAnchorEl(null);\n    };\n\n    const handleMenuClose = () => {\n        setAnchorEl(null);\n        handleMobileMenuClose();\n    };\n\n    const handleMobileMenuOpen = (event: React.MouseEvent<HTMLElement>) => {\n        setMobileMoreAnchorEl(event.currentTarget);\n    };\n\n    const menuId = 'primary-search-account-menu';\n    const renderMenu = (\n        <Menu\n            anchorEl={anchorEl}\n            anchorOrigin={{\n                vertical: 'top',\n                horizontal: 'right',\n            }}\n            id={menuId}\n            keepMounted\n            transformOrigin={{\n                vertical: 'top',\n                horizontal: 'right',\n            }}\n            open={isMenuOpen}\n            onClose={handleMenuClose}\n        >\n            <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\n            <MenuItem onClick={handleMenuClose}>My account</MenuItem>\n        </Menu>\n    );\n\n    const mobileMenuId = 'primary-search-account-menu-mobile';\n    const renderMobileMenu = (\n        <Menu\n            anchorEl={mobileMoreAnchorEl}\n            anchorOrigin={{\n                vertical: 'top',\n                horizontal: 'right',\n            }}\n            id={mobileMenuId}\n            keepMounted\n            transformOrigin={{\n                vertical: 'top',\n                horizontal: 'right',\n            }}\n            open={isMobileMenuOpen}\n            onClose={handleMobileMenuClose}\n        >\n            <MenuItem>\n                <NavLink\n                    style={({ isActive }) => {\n                        return {\n                            color: isActive ? \"#02c692\" : \"\"\n                        };\n                    }} to=\"/\">\n                    Home\n                </NavLink>\n            </MenuItem>\n            <MenuItem>\n                <NavLink\n                    style={({ isActive }) => {\n                        return {\n                            color: isActive ? \"#02c692\" : \"\"\n                        };\n                    }}\n                    to=\"/games\">\n                    IOTABOTS\n                </NavLink>\n            </MenuItem>\n            <MenuItem>\n                <NavLink\n                    style={({ isActive }) => {\n                        return {\n                            color: isActive ? \"#02c692\" : \"\"\n                        };\n                    }}\n                    to=\"/spacebots\">\n                    Spacebots\n                </NavLink>\n            </MenuItem>\n            <MenuItem>\n                <NavLink\n                    style={({ isActive }) => {\n                        return {\n                            color: isActive ? \"#02c692\" : \"\"\n                        };\n                    }}\n                    to=\"/profile\">\n                    Profile\n                </NavLink>\n            </MenuItem>\n            <MenuItem\n\n            >\n                <IconButton\n                    target=\"_blank\"\n                    href=\"https://twitter.com/iotabots\"\n                    size=\"large\"\n                    aria-label=\"show 1 new tweets\"\n                    color=\"inherit\"\n                >\n                    <Badge badgeContent={1} color=\"error\">\n                        <Twitter />\n                    </Badge>\n                </IconButton>\n            </MenuItem>\n        </Menu>\n    );\n\n    return (\n        <Box sx={{ flexGrow: 1 }}>\n            <AppBar position=\"static\">\n                <Toolbar>\n                    <Typography\n                        variant=\"h6\"\n                        noWrap\n                        component=\"div\"\n                        sx={{ display: { xs: 'block', sm: 'block' } }}\n                    >\n                        <NavLink\n                            className=\"nav-link\" to=\"/\">\n                            IOTABOTS\n                        </NavLink>\n                    </Typography>\n                    <Box sx={{ flexGrow: 1 }} />\n                    <Box sx={{ display: { xs: 'none', md: 'flex' } }}>\n                        <NavLink\n                            style={({ isActive }) => {\n                                return {\n                                    color: isActive ? \"#02c692\" : \"\"\n                                };\n                            }}\n                            className=\"nav-link\" to=\"/\">\n                            Home\n                        </NavLink>\n                    </Box>\n                    <Box sx={{ display: { xs: 'none', md: 'flex' } }}>\n                        |\n                    </Box>\n                    <Box sx={{ display: { xs: 'none', md: 'flex' } }}>\n                        <NavLink\n                            style={({ isActive }) => {\n                                return {\n                                    color: isActive ? \"#02c692\" : \"\"\n                                };\n                            }}\n                            className=\"nav-link\" to=\"/games\">\n                            IOTABOTS\n                        </NavLink>\n                    </Box>\n                    <Box sx={{ display: { xs: 'none', md: 'flex' } }}>\n                        |\n                    </Box>\n                    <Box sx={{ display: { xs: 'none', md: 'flex' } }}>\n                        <NavLink\n                            style={({ isActive }) => {\n                                return {\n                                    color: isActive ? \"#02c692\" : \"\"\n                                };\n                            }}\n                            className=\"nav-link\" to=\"/spacebots\">\n                            Spacebots\n                        </NavLink>\n                    </Box>\n                    <Box sx={{ display: { xs: 'none', md: 'flex' } }}>\n                        |\n                    </Box>\n                    <Box sx={{ display: { xs: 'none', md: 'flex' } }}>\n                        <NavLink\n                            style={({ isActive }) => {\n                                return {\n                                    color: isActive ? \"#02c692\" : \"\"\n                                };\n                            }}\n                            className=\"nav-link\" to=\"/profile\">\n                            Profile\n                        </NavLink>\n                    </Box>\n                    <Box sx={{ display: { xs: 'none', md: 'flex' } }}>\n                        <IconButton target=\"_blank\" href=\"https://twitter.com/iotabots\" size=\"large\" aria-label=\"twitter\" color=\"inherit\">\n                            <Badge badgeContent={1} color=\"error\">\n                                <Twitter />\n                            </Badge>\n                        </IconButton>\n                    </Box>\n                    <Box sx={{ display: { xs: 'flex', md: 'none' } }}>\n                        <IconButton\n                            size=\"large\"\n                            aria-label=\"show more\"\n                            aria-controls={mobileMenuId}\n                            aria-haspopup=\"true\"\n                            onClick={handleMobileMenuOpen}\n                            color=\"inherit\"\n                        >\n                            <MoreIcon />\n                        </IconButton>\n                    </Box>\n                </Toolbar>\n            </AppBar>\n            {renderMobileMenu}\n            {renderMenu}\n        </Box>\n    );\n}","\nimport Link from '@mui/material/Link';\nimport Typography from '@mui/material/Typography';\nimport Box from '@mui/material/Box';\n\nexport default function Album() {\n\n    function Copyright() {\n        return (\n            <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\">\n                {'Copyright © '}\n                <Link color=\"inherit\" href=\"/\">\n                    iotabots.io\n                </Link>{' '}\n                {new Date().getFullYear()}\n                {'.'}\n            </Typography>\n        );\n    }\n\n    return (\n        <Box sx={{ bgcolor: 'background.paper', p: 6 }} component=\"footer\">\n            <Typography variant=\"h6\" align=\"center\" gutterBottom>\n                *BEE* *BOB* *BOO*\n            </Typography>\n            <Typography\n                variant=\"subtitle1\"\n                align=\"center\"\n                color=\"text.secondary\"\n                component=\"p\"\n            >\n                Follow us on <a href=\"https://twitter.com/iotabots\">Twitter</a>\n            </Typography>\n            <Copyright />\n        </Box>\n    )\n}\n\n","export default __webpack_public_path__ + \"static/media/Game.2ed01ee1.png\";","import Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport CardMedia from '@mui/material/CardMedia';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport Grid from '@mui/material/Grid';\nimport Stack from '@mui/material/Stack';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport { NavLink } from \"react-router-dom\";\nimport spacebots_img from \"../assets/images/Game.png\";\n\nexport default function Home() {\n\n    return (\n        <>\n            <CssBaseline />\n            <main>\n                {/* Hero unit */}\n                <Box\n                    sx={{\n                        bgcolor: 'background.paper',\n                        pt: 8,\n                        pb: 6,\n                    }}\n                >\n\n\n                    <Container id=\"what\" maxWidth=\"sm\">\n                        <Typography\n                            component=\"h1\"\n                            variant=\"h2\"\n                            align=\"center\"\n                            color=\"text.primary\"\n                            gutterBottom\n                        >\n                            IOTABOTS GAMES\n                        </Typography>\n                        <Typography variant=\"h5\" align=\"center\" color=\"text.secondary\" paragraph>\n                            *BEE* *BOB* *BOO*\n                        </Typography>\n                        <Typography variant=\"h5\" align=\"center\" color=\"text.secondary\" paragraph>\n                            On the 2nd November 2021, the first 500 IOTABOTS were minted for free on the public IOTA Smart Contracts EVM Testnet. More drops soon!\n                        </Typography>\n                        <Typography variant=\"h5\" align=\"center\" color=\"text.secondary\" paragraph>\n                            *BEE* *BOB* *BOO*\n                        </Typography>\n                        <Stack\n                            sx={{ pt: 4 }}\n                            direction=\"row\"\n                            spacing={2}\n                            justifyContent=\"center\"\n                        >\n                        </Stack>\n                    </Container>\n                </Box>\n                <Container sx={{ py: 8 }} maxWidth=\"md\">\n                    <Typography\n                        component=\"h1\"\n                        variant=\"h2\"\n                        align=\"center\"\n                        color=\"#fff\"\n                        gutterBottom\n                    >\n                        Available Games\n                    </Typography>\n                    {/* End hero unit */}\n                    <Grid container spacing={4}>\n\n                        <Grid item key={1} xs={12} sm={12} md={6}>\n                            <NavLink to=\"/games\">\n                                <Card\n                                    sx={{ height: '100%', display: 'flex', flexDirection: 'column' }}\n                                >\n                                    <CardMedia\n                                        component=\"img\"\n                                        sx={{\n                                            maxHeight: '280px',\n                                            minHeight: '280px',\n                                            padding: '10px'\n                                            // 16:9\n                                            // pt: '56.25%',\n                                        }}\n                                        image={`http://assets.iotabots.io/${1}.png`}\n                                        alt=\"IOTABOT\"\n                                    />\n                                    <CardContent sx={{ flexGrow: 1 }}>\n                                        <Typography gutterBottom variant=\"h6\" component=\"h3\">\n                                            {`IOTABOTS `}\n                                        </Typography>\n                                        <Typography gutterBottom variant=\"body1\" component=\"p\">\n                                            {`Rock Paper & Scissors `}\n                                        </Typography>\n                                    </CardContent>\n\n                                </Card>\n                            </NavLink>\n                        </Grid>\n\n                        <Grid item key={1} xs={12} sm={12} md={6}>\n                            <NavLink to=\"/spacebots\">\n\n                                <Card\n                                    sx={{ height: '100%', display: 'flex', flexDirection: 'column' }}\n                                >\n                                    <CardMedia\n                                        component=\"img\"\n                                        sx={{\n                                            maxHeight: '280px',\n                                            minHeight: '280px',\n                                            padding: '10px'\n                                            // 16:9\n                                            // pt: '56.25%',\n                                        }}\n                                        image={spacebots_img}\n                                        alt=\"Spacebots\"\n                                    />\n                                    <CardContent sx={{ flexGrow: 0 }}>\n                                        <Typography gutterBottom variant=\"h6\" component=\"h3\">\n                                            {`Spacebots `}\n                                        </Typography>\n                                        <Typography gutterBottom variant=\"body1\" component=\"p\">\n                                            {`Discover the Space `}\n                                        </Typography>\n                                    </CardContent>\n                                </Card>\n                            </NavLink>\n                        </Grid>\n                    </Grid>\n                </Container>\n            </main>\n        </>\n    );\n}","import { InjectedConnector } from '@web3-react/injected-connector'\n\nexport const injected = new InjectedConnector({\n  supportedChainIds: [1071],\n})","import CssBaseline from \"@mui/material/CssBaseline\";\nimport Typography from \"@mui/material/Typography\";\nimport Container from \"@mui/material/Container\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport * as React from \"react\";\n\nimport { ethers } from \"ethers\";\n// import { web3 } from \"web\";\n\nimport IOTABOTS_ABI from \"../contracts/iotabots_abi.json\";\nimport GAME from \"../contracts/Game.json\";\nimport TOKEN from \"../contracts/Token.json\";\n\nimport { injected } from \"../components/wallet/connectors\";\nimport Button from \"@mui/material/Button\";\nimport Card from \"@mui/material/Card\";\nimport CardContent from \"@mui/material/CardContent\";\nimport CardMedia from \"@mui/material/CardMedia\";\nimport Grid from \"@mui/material/Grid\";\nimport Box from \"@mui/material/Box\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport Modal from \"@mui/material/Modal\";\n\nimport axios from \"axios\";\n\nimport { useState, useEffect } from \"react\";\n\n// const iotabotsContractAddress = \"0x6c2D60145cDD0396bd03298693495bf98fcdD93E\"; // LIVE\nconst iotabotsContractAddress = \"0xb5A53615170e4684E488C9E1c641aB9dDC307489\"; // Test\n\nconst gameContractAddress = \"0x3CE8aB86dED969004102caB650060373e04A0448\"; // GameTest\n\nconst tokenContractAddress = \"0xdFCF738225F6508F7A664c3c7D236432501e16d4\"; // Test Token\n\nexport default function Games() {\n  const { active, account, library, activate, deactivate, chainId } =\n    useWeb3React();\n\n  const [open, setOpen] = React.useState(false);\n  const handleOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n\n  const [winner, setWinner] = useState({ message: \"\" });\n  const [loading, setLoading] = useState(false);\n\n  const [playerTokens, setPlayerTokens] = useState(\"0.0\");\n  const [tokenSupply, setTokenSupply] = useState(\"0.0\");\n\n  useEffect(() => {\n    if (active) {\n      loadBots();\n      loadGame();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [active]);\n\n  interface Bot {\n    attributes: Array<object>;\n    date: number;\n    description: string;\n    dna: string;\n    edition: number;\n    image: string;\n    name: string;\n  }\n\n  const [bots, setBots] = useState<Array<any>>([]);\n\n  const callback = function (err: any) {\n    console.log(\"callback1\", err);\n  };\n\n  async function connect() {\n    try {\n      let x = await activate(injected, callback);\n      console.log(\"activated\", x);\n      console.log(\"activated\", active);\n      console.log(\"activated\", account);\n      // useEffect(() => {\n      //     loadBots()\n      // }, [])\n    } catch (ex) {\n      console.log(ex);\n    }\n  }\n\n  async function loadBots() {\n    // await connect();\n    const provider = new ethers.providers.Web3Provider(library.currentProvider);\n    let contract = new ethers.Contract(\n      iotabotsContractAddress,\n      IOTABOTS_ABI,\n      provider\n    );\n    console.log(\"contract\", contract);\n    console.log(\"account\", account);\n\n    const data = await contract.walletOfOwner(account);\n    console.log(\"data:\", data);\n    const items: Array<Bot> = await Promise.all(\n      data.map(async (i: any) => {\n        let token_index = i.toNumber();\n        console.log(\"token_index:\", token_index);\n\n        const metadata_url = await contract.tokenURI(token_index);\n        console.log(\"metadata_url:\", metadata_url);\n\n        const metadata = await axios.get(metadata_url);\n\n        console.log(\"metadata:\", metadata.data);\n        return metadata.data;\n      })\n    );\n\n    console.log(\"items:\", items);\n    setBots(items);\n    console.log(\"bots:\", bots);\n    // const tokenContract = new ethers.Contract(iotabotsContractAddress, IOTABOTS_ABI, provider)\n    // console.log(\"tokenContract:\", tokenContract)\n  }\n\n  async function loadGame() {\n    // await connect();\n    console.log(\"loadGame\");\n\n    const provider = new ethers.providers.Web3Provider(library.currentProvider);\n    let contract = new ethers.Contract(gameContractAddress, GAME.abi, provider);\n    console.log(\"contract\", contract);\n    console.log(\"account\", account);\n\n    let token = new ethers.Contract(tokenContractAddress, TOKEN.abi, provider);\n    let playerTokenBanlance = await token.balanceOf(account);\n    playerTokenBanlance = ethers.utils.formatEther(playerTokenBanlance);\n    console.log(\"playerTokenBanlance\", playerTokenBanlance);\n    let totalSupply = await token.totalSupply();\n    totalSupply = ethers.utils.formatEther(totalSupply);\n    setTokenSupply(totalSupply);\n    console.log(\"totalSupply\", totalSupply);\n    setPlayerTokens(playerTokenBanlance);\n\n    let botsTokenBanlance = await token.balanceOf(iotabotsContractAddress);\n    botsTokenBanlance = ethers.utils.formatEther(botsTokenBanlance);\n    console.log(\"botsTokenBanlance\", botsTokenBanlance);\n  }\n\n  async function start_game(bet: any) {\n    try {\n      console.log(\"loadGame\");\n\n      setWinner({ message: \"\" });\n      setLoading(true);\n\n      const provider = new ethers.providers.Web3Provider(\n        library.currentProvider\n      );\n      const signer = provider.getSigner();\n      let contract = new ethers.Contract(gameContractAddress, GAME.abi, signer);\n\n      console.log(\"start_game\", bots);\n      await contract.createSingleGame(bots[0]?.edition, bet, {\n        value: ethers.utils.parseEther(\"1\"),\n      });\n\n      contract.once(\"gamePlayed\", (winner: string, _player_bet, _bot_bet) => {\n        console.log(\"gamePlayed\");\n        console.log(winner, _player_bet.toNumber(), _bot_bet.toNumber());\n\n        if (winner && winner.length > 0) {\n          if (winner === account) {\n            console.log(\"😀 won\");\n            setWinner({\n              message: `😀 You won 10 EGGS! 🎉`,\n            });\n          } else if (winner === gameContractAddress) {\n            console.log(\"🤖 won\");\n            setWinner({\n              message: `Sorry - your 🤖 won!`,\n            });\n          } else {\n            console.log(\"Draw!\");\n            setWinner({\n              message: `Draw! There is no winner!`,\n            });\n          }\n        }\n        setLoading(false);\n        handleOpen();\n        loadGame();\n      });\n    } catch (ex) {\n      console.log(ex);\n    }\n  }\n\n  async function disconnect() {\n    try {\n      deactivate();\n      console.log(\"deactivated\");\n    } catch (ex) {\n      console.log(ex);\n    }\n  }\n\n  const style = {\n    position: \"absolute\" as \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    transform: \"translate(-50%, -50%)\",\n    width: 400,\n    bgcolor: \"background.paper\",\n    border: \"2px solid #000\",\n    boxShadow: 24,\n    p: 4,\n  };\n\n  var content;\n  if (active) {\n    content = (\n      <>\n        <br />\n        <Container maxWidth=\"sm\">\n          <Box\n            sx={{ bgcolor: \"#cfe8fc\", padding: \"10px\", textAlign: \"center\" }}\n          >\n            {active ? (\n              <span>\n                Connected with{\" \"}\n                <b>{`${account!.substring(0, 6)}...${account!.substring(\n                  account!.length - 4\n                )}`}</b>\n              </span>\n            ) : (\n              <span>Not connected</span>\n            )}\n            <p>ChainId: {chainId}</p>\n            <Button variant=\"outlined\" onClick={disconnect}>\n              Disconnect\n            </Button>\n          </Box>\n        </Container>\n        <hr />\n        <br />\n\n        <Card\n          sx={{\n            width: \"100%\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            marginBottom: \"30px\",\n          }}\n        >\n          <CardContent sx={{ flexGrow: 1 }}>\n            <Typography gutterBottom variant=\"h6\" component=\"h6\">\n              Total Supply: {tokenSupply} EGGS\n            </Typography>\n            <Typography gutterBottom variant=\"h6\" component=\"h6\">\n              Player Balance: {playerTokens} EGGS\n            </Typography>\n          </CardContent>\n        </Card>\n        <Typography\n          component=\"h3\"\n          variant=\"h3\"\n          align=\"center\"\n          color=\"#fff\"\n          gutterBottom\n        >\n          Your IOTABOTS:\n        </Typography>\n        <Container maxWidth=\"sm\">\n          <Box sx={{ textAlign: \"center\" }}>\n            {bots.map((bot, index) => (\n              <Grid item key={index} xs={12} sm={12} md={12}>\n                <Card\n                // sx={{ width: '100%', display: 'flex', flexDirection: 'column' }}\n                >\n                  <CardMedia\n                    height=\"100%\"\n                    component=\"img\"\n                    image={bot.image}\n                    alt=\"IOTABOT\"\n                  />\n                  <CardContent sx={{ flexGrow: 1 }}>\n                    <Typography gutterBottom variant=\"h6\" component=\"h6\">\n                      {`IOTABOT ${bot.name}`}\n                    </Typography>\n                    <Typography gutterBottom variant=\"body1\" component=\"p\">\n                      {`Play against your IOTABOT!`}\n                    </Typography>\n                    <br />\n                    <br />\n\n                    <Button\n                      disabled={loading}\n                      className=\"playBtn\"\n                      variant=\"outlined\"\n                      onClick={() => start_game(0)}\n                    >\n                      ✊\n                    </Button>\n                    <Button\n                      disabled={loading}\n                      className=\"playBtn\"\n                      variant=\"outlined\"\n                      onClick={() => start_game(1)}\n                    >\n                      ✋\n                    </Button>\n                    <Button\n                      disabled={loading}\n                      className=\"playBtn\"\n                      variant=\"outlined\"\n                      onClick={() => start_game(2)}\n                    >\n                      ✌️\n                    </Button>\n                    <br />\n                    <br />\n                    {loading ? (\n                      <CircularProgress />\n                    ) : (\n                      <p className=\"result_field\">Choose and play!</p>\n                    )}\n                  </CardContent>\n                </Card>\n              </Grid>\n            ))}\n          </Box>\n\n          <Modal\n            open={open}\n            onClose={handleClose}\n            aria-labelledby=\"modal-modal-title\"\n            aria-describedby=\"modal-modal-description\"\n          >\n            <Box sx={style}>\n              <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n                IOTABOTS Game\n              </Typography>\n              <Typography id=\"modal-modal-description\" sx={{ mt: 2 }}>\n                {winner ? winner.message : \"\"}\n              </Typography>\n              <Button onClick={handleClose}>Okay!</Button>\n            </Box>\n          </Modal>\n          <Card\n            sx={{\n              width: \"100%\",\n              display: \"flex\",\n              flexDirection: \"column\",\n              marginBottom: \"30px\",\n              marginTop: \"50px\",\n            }}\n          >\n            <CardContent sx={{ flexGrow: 1 }}>\n              <Typography gutterBottom variant=\"h6\" component=\"h6\">\n                Rules\n              </Typography>\n              <Typography gutterBottom variant=\"body1\">\n                <ol>\n                  <li>\n                    Each player must connect their wallet to the IOTABOTVERSE\n                    platform and hold an IOTABOT (ERC721 Token) to participate\n                    in the game.\n                  </li>\n                  <li>Players can only play against their own IOTABOT.</li>\n                  <li>\n                    Each game round consists of one move: Rock, Paper, or\n                    Scissors.\n                  </li>\n                  <li>\n                    To initiate a game, the player must submit a move by signing\n                    a transaction on the ShimmerEVM network.\n                  </li>\n                  <li>\n                    The IOTABOT will automatically submit its move, which can be\n                    determined randomly or based on predefined logic.\n                  </li>\n                  <li>\n                    Once both moves have been submitted, the smart contract will\n                    determine the winner using the standard Rock Paper Scissors\n                    rules:\n                    <ul>\n                      <li>Rock beats Scissors</li>\n                      <li>Scissors beats Paper</li>\n                      <li>Paper beats Rock</li>\n                    </ul>\n                  </li>\n                  <li>If the player wins, they are awarded 10 EGGS tokens.</li>\n                  <li>\n                    In case of a tie or a loss, the game is declared a draw or a\n                    loss respectively, and no rewards will be distributed.\n                  </li>\n                  <li>\n                    Have fun!\n                  </li>\n                </ol>\n              </Typography>\n            </CardContent>\n          </Card>\n        </Container>\n      </>\n    );\n  } else {\n    content = (\n      <Container maxWidth=\"sm\">\n        <Box sx={{ bgcolor: \"#cfe8fc\", padding: \"10px\", textAlign: \"center\" }}>\n          <Button variant=\"outlined\" onClick={connect}>\n            Connect to MetaMask\n          </Button>\n        </Box>\n      </Container>\n    );\n  }\n\n  return (\n    <>\n      <CssBaseline />\n      <main>\n        {/* Hero unit */}\n        <Container sx={{ py: 8 }} maxWidth=\"md\">\n          <Typography\n            component=\"h1\"\n            variant=\"h2\"\n            align=\"center\"\n            color=\"#fff\"\n            gutterBottom\n          >\n            IOTABOTS Games\n          </Typography>\n          {/* End hero unit */}\n          {content}\n        </Container>\n      </main>\n    </>\n  );\n}\n","import CssBaseline from '@mui/material/CssBaseline';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport { useWeb3React } from \"@web3-react/core\"\n\nimport { ethers } from \"ethers\";\n// import { web3 } from \"web\";\n\nimport SPACEBOTS_ABI from \"../contracts/spacebots_abi.json\";\n\nimport { injected } from \"../components/wallet/connectors\"\nimport Button from '@mui/material/Button';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport CardMedia from '@mui/material/CardMedia';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\n\n\nimport { useState, useEffect } from 'react';\n\n\nimport spacebots_img from \"../assets/images/Game.png\";\n\nconst spacebotsContractAddress = \"0x4578D32Da12F24D6Cabc0E313bc610bcbD9a1B77\";\n\nexport default function Spacebots() {\n\n    const { active, account, library, activate, deactivate, chainId } = useWeb3React()\n\n    useEffect(() => {\n        if (active) {\n            loadBots()\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [active])\n\n\n    const [bots, setBots] = useState<Array<any>>([]);\n\n    const callback = function (err: any) {\n        console.log(\"callback1\", err)\n    }\n\n    async function connect() {\n        try {\n            let x = await activate(injected, callback)\n            console.log(\"activated\", x)\n            console.log(\"activated\", active)\n            console.log(\"activated\", account)\n            // useEffect(() => {\n            //     loadBots()\n            // }, [])\n        } catch (ex) {\n            console.log(ex)\n        }\n    }\n\n    async function loadBots() {\n        // await connect();\n        const provider = new ethers.providers.Web3Provider(library.currentProvider)\n        let contract = new ethers.Contract(\n            spacebotsContractAddress,\n            SPACEBOTS_ABI,\n            provider\n        )\n        console.log(\"contract\", contract)\n        console.log(\"account\", account)\n\n\n        const data = await contract.walletOfOwner(account)\n        console.log(\"data:\", data)\n        const items: Array<any> = await Promise.all(data.map(async (i: any) => {\n            let token_index = i.toNumber()\n            console.log(\"token_index:\", token_index)\n\n            const metadata_url = await contract.tokenURI(token_index)\n            console.log(\"metadata_url:\", metadata_url)\n\n            let obj = { \n                \n                tokenId: token_index,\n                url: metadata_url\n             }\n\n            // const metadata = await axios.get(metadata_url)\n\n            // console.log(\"metadata:\", metadata.data)\n            return obj\n        }))\n\n        console.log(\"items:\", items)\n        setBots(items)\n        console.log(\"bots:\", bots)\n        // const tokenContract = new ethers.Contract(iotabotsContractAddress, IOTABOTS_ABI, provider)\n        // console.log(\"tokenContract:\", tokenContract)\n    }\n\n\n    async function disconnect() {\n        try {\n            deactivate()\n            console.log(\"deactivated\")\n        } catch (ex) {\n            console.log(ex)\n        }\n    }\n\n\n    var content;\n    if (active) {\n        content = <>\n            <br />\n            <Container maxWidth=\"sm\">\n                <Box sx={{ bgcolor: '#cfe8fc', padding: \"10px\", textAlign: \"center\" }} >\n\n                    {active ? <span>Connected with <b>{`${account!.substring(0, 6)}...${account!.substring(account!.length - 4)}`}</b></span> : <span>Not connected</span>}\n                    <p>ChainId: {chainId}</p>\n                    <Button variant=\"outlined\" onClick={disconnect} >Disconnect</Button>\n                </Box>\n            </Container>\n            <hr />\n            <br />\n\n            <Typography\n                component=\"h3\"\n                variant=\"h3\"\n                align=\"center\"\n                color=\"#fff\"\n                gutterBottom\n            >\n                Your Spacebots:</Typography>\n            <Container maxWidth=\"sm\">\n                <Box sx={{ textAlign: 'center' }} >\n\n                    {bots.map((bot, index) => (\n                        <Grid item key={index} xs={12} sm={12} md={12}>\n                            <Card\n                            // sx={{ width: '100%', display: 'flex', flexDirection: 'column' }}\n                            >\n                                <CardMedia\n                                    height=\"100%\"\n                                    component=\"img\"\n                                    image={spacebots_img}\n                                    alt=\"Spacebots\"\n                                />\n                                <CardContent sx={{ flexGrow: 1 }}>\n                                    <Typography gutterBottom variant=\"h6\" component=\"h6\">\n                                        {`Spacebots ${bot.tokenId}`}\n                                    </Typography>\n                                    <Typography\n                                        component=\"h4\"\n                                        variant=\"h4\"\n                                        align=\"center\"\n                                        color=\"#fff\"\n                                        gutterBottom\n                                    >\n                                        <a rel=\"noreferrer\" target=\"_blank\" href={bot.url}>Play</a>\n                                    </Typography>\n                                </CardContent>\n                            </Card>\n                        </Grid>\n                    ))}\n                </Box>\n            </Container>\n        </>;\n    } else {\n        content =\n            <Container maxWidth=\"sm\">\n                <Box sx={{ bgcolor: '#cfe8fc', padding: \"10px\", textAlign: \"center\" }} >\n\n                    <Button variant=\"outlined\" onClick={connect} >Connect to MetaMask</Button></Box>\n            </Container>;\n    }\n\n    return (\n        <>\n            <CssBaseline />\n            <main>\n                {/* Hero unit */}\n                <Container sx={{ py: 8 }} maxWidth=\"md\">\n                    <Typography\n                        component=\"h1\"\n                        variant=\"h2\"\n                        align=\"center\"\n                        color=\"#fff\"\n                        gutterBottom\n                    >\n                        Spacebots\n                    </Typography>\n                    {/* End hero unit */}\n                    {content}\n                </Container>\n            </main>\n        </>\n    );\n}","import CssBaseline from '@mui/material/CssBaseline';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport { useWeb3React } from \"@web3-react/core\"\n\nimport { ethers } from \"ethers\";\n\nimport IOTABOTS_ABI from \"../contracts/iotabots_abi.json\";\n\nimport { injected } from \"../components/wallet/connectors\"\nimport Button from '@mui/material/Button';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport CardMedia from '@mui/material/CardMedia';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\n\nimport axios from 'axios'\n\nimport { useState, useEffect } from 'react';\n\n// const iotabotsContractAddress = \"0x6c2D60145cDD0396bd03298693495bf98fcdD93E\"; // LIVE\nconst iotabotsContractAddress = \"0xb5A53615170e4684E488C9E1c641aB9dDC307489\"; // Test\n\nexport default function Profile() {\n\n    const { active, account, library, connector, activate, deactivate } = useWeb3React()\n\n    useEffect(() => {\n        if (active) {\n            loadBots()\n        }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [active])\n\n    interface Bot {\n        attributes: Array<object>;\n        date: number;\n        description: string;\n        dna: string;\n        edition: number;\n        image: string;\n        name: string;\n    }\n\n\n    const [bots, setBots] = useState<Array<any>>([]);\n\n    const callback = function (err: any) {\n        console.log(\"callback1\", err)\n    }\n\n    async function connect() {\n        try {\n            let x = await activate(injected, callback)\n            console.log(\"activated\", x)\n            console.log(\"activated\", active)\n            console.log(\"activated\", account)\n            // useEffect(() => {\n            //     loadBots()\n            // }, [])\n        } catch (ex) {\n            console.log(ex)\n        }\n    }\n\n    async function loadBots() {\n        // await connect();\n        console.log(\"library\", library)\n        console.log(\"connector\", connector)\n        const provider = new ethers.providers.Web3Provider(library.currentProvider)\n        console.log(\"provider\", provider)\n        let contract = new ethers.Contract(\n            iotabotsContractAddress,\n            IOTABOTS_ABI,\n            provider\n        )\n        console.log(\"contract\", contract)\n        console.log(\"account\", account)\n\n\n        const data = await contract.walletOfOwner(account)\n        console.log(\"data:\", data)\n        const items: Array<Bot> = await Promise.all(data.map(async (i: any) => {\n            let token_index = i.toNumber()\n            console.log(\"token_index:\", token_index)\n\n            const metadata_url = await contract.tokenURI(token_index)\n            console.log(\"metadata_url:\", metadata_url)\n\n            const metadata = await axios.get(metadata_url)\n\n            console.log(\"metadata:\", metadata)\n            console.log(\"metadata:\", metadata.data)\n            return metadata.data\n        }))\n\n        console.log(\"items:\", items)\n        setBots(items)\n        console.log(\"bots:\", bots)\n        // const tokenContract = new ethers.Contract(iotabotsContractAddress, IOTABOTS_ABI, provider)\n        // console.log(\"tokenContract:\", tokenContract)\n    }\n\n    async function disconnect() {\n        try {\n            deactivate()\n            console.log(\"deactivated\")\n        } catch (ex) {\n            console.log(ex)\n        }\n    }\n\n\n    var content;\n    if (active) {\n        content = <>\n            <br />\n            <Container maxWidth=\"sm\">\n                <Box sx={{ bgcolor: '#cfe8fc', padding: \"10px\", textAlign: \"center\" }} >\n\n                    {active ? <span>Connected with <b>{`${account!.substring(0, 6)}...${account!.substring(account!.length - 4)}`}</b></span> : <span>Not connected</span>}\n                    <Button variant=\"outlined\" onClick={disconnect} >Disconnect</Button>\n                </Box>\n            </Container>\n            <hr />\n            <br />\n\n            <Typography\n                component=\"h3\"\n                variant=\"h3\"\n                align=\"center\"\n                color=\"#fff\"\n                gutterBottom\n            >\n                Your IOTABOTS:</Typography>\n            <Container maxWidth=\"sm\">\n                <Box sx={{ textAlign: 'center'}} >\n\n                    {bots.map((bot, index) => (\n                        <Grid item key={index} xs={12} sm={12} md={12}>\n                            <Card\n                            // sx={{ width: '100%', display: 'flex', flexDirection: 'column' }}\n                            >\n                                <CardMedia\n                                    height=\"100%\"\n                                    component=\"img\"\n                                    image={bot.image}\n                                    alt=\"IOTABOT\"\n                                />\n                                <CardContent sx={{ flexGrow: 1 }}>\n                                    <Typography gutterBottom variant=\"h6\" component=\"h6\">\n                                        {`IOTABOT ${bot.name}`}\n                                    </Typography>\n                                    <Typography gutterBottom variant=\"body1\" component=\"p\">\n                                        {`DNA ${bot.dna}`}\n                                    </Typography>\n                                    <Typography gutterBottom variant=\"body1\" component=\"p\">\n                                        {`Edition ${bot.edition}`}\n                                    </Typography>\n                                    <Typography gutterBottom variant=\"body1\" component=\"p\">\n                                        {`Created on ${new Date(bot.date).toLocaleDateString()}`}\n                                    </Typography>\n                                </CardContent>\n                            </Card>\n                        </Grid>\n                    ))}\n                </Box>\n            </Container>\n        </>;\n    } else {\n        content =\n            <Container maxWidth=\"sm\">\n                <Box sx={{ bgcolor: '#cfe8fc', padding: \"10px\", textAlign: \"center\" }} >\n\n                    <Button variant=\"outlined\" onClick={connect} >Connect to MetaMask</Button></Box>\n            </Container>;\n    }\n\n    return (\n        <>\n            <CssBaseline />\n            <main>\n                {/* Hero unit */}\n                <Container sx={{ py: 8 }} maxWidth=\"md\">\n                    <Typography\n                        component=\"h1\"\n                        variant=\"h2\"\n                        align=\"center\"\n                        color=\"#fff\"\n                        gutterBottom\n                    >\n                        Your Profile\n                    </Typography>\n                    {/* End hero unit */}\n                    {content}\n                </Container>\n            </main>\n        </>\n    );\n}","import { createTheme, ThemeProvider } from '@mui/material/styles';\nimport { Routes, Route } from \"react-router-dom\";\n\nimport Navigation from './components/Navigation'\nimport Footer from './components/Footer'\n\nimport Home from './pages/Home'\nimport Games from './pages/Games'\nimport Spacebots from './pages/Spacebots'\nimport Profile from './pages/Profile'\n\nimport './App.css';\n\nimport { Web3ReactProvider } from '@web3-react/core'\nimport Web3 from 'web3'\n\nfunction getLibrary(provider: any) {\n  return new Web3(provider)\n}\n\n\nexport default function App() {\n\n  const theme = createTheme({\n    typography: {\n      fontFamily: 'coder',\n    },\n    palette: {\n      primary: {\n        light: '#757ce8',\n        main: '#2b2b2b',\n        dark: '#002884',\n        contrastText: '#fff',\n      },\n      secondary: {\n        light: '#ff7961',\n        main: '#f44336',\n        dark: '#ba000d',\n        contrastText: '#000',\n      },\n    },\n  });\n\n  return (\n    <Web3ReactProvider getLibrary={getLibrary}>\n      <ThemeProvider theme={theme}>\n        <Navigation />\n        <Routes>\n          <Route path=\"/\" element={<Home />} />\n          <Route path=\"games\" element={<Games />} />\n          <Route path=\"spacebots\" element={<Spacebots />} />\n          <Route path=\"profile\" element={<Profile />} />\n        </Routes>\n        <Footer />\n      </ThemeProvider>\n    </Web3ReactProvider>\n  );\n}\n\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from \"react-router-dom\";\n\n\nReactDOM.render(\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}